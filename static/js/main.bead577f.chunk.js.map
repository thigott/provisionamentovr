{"version":3,"sources":["components/templates/Header.jsx","components/templates/Main.jsx","components/home/Home.jsx","components/users/api.js","components/users/UserCrud.jsx","components/users/AlteraCanal.jsx","components/users/PPOE.jsx","components/users/OnOffONU.jsx","components/users/ListaONUs.jsx","main/Routes.jsx","components/templates/Logo.jsx","components/templates/Nav.jsx","components/templates/Footer.jsx","serviceWorker.js","index.js","main/App.jsx","assets/imgs/logoviareal.png"],"names":["templates_Header","props","react_default","a","createElement","className","concat","icon","title","subtitle","templates_Main","Fragment","children","Home","api","axios","create","baseURL","headerProps","baseUrl","initialState","user","id","mac","number","olt","pon","slot","list","meumac","meussid","show","UserCrud","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","objectSpread","trocarSSID","asyncToGenerator","regenerator_default","mark","_callee","valormac","valorssid","valorsenha","resposta","wrap","_context","prev","next","document","getElementById","value","console","log","get","sent","handleShow","stop","bind","assertThisInitialized","handleClose","_this2","then","resp","setState","data","_this3","method","url","getUpdatedList","_this4","delete","add","arguments","length","undefined","filter","u","unshift","event","target","name","renderRows","_this5","map","key","onClick","load","remove","_this6","type","placeholder","onChange","e","updateField","clear","Modal","onHide","Header","closeButton","Title","Body","Footer","renderForm","renderTable","renderPopup","Component","novoCanal","AlteraCanal","trocarCanal","canal","valorcanal","options","selectedIndex","teste","_callee2","_context2","defaultValue","usuarioPPOE","senhaPPOE","PPOE","usuario","senha","response","status","configPPOE","OnOffONU","situacao","novoSituacao","es","to","onuONOFF","save","Routes","react_router_es","exact","path","component","ListaONU","from","templates_Logo","src","logo","alt","templates_Nav","templates_Footer","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"iPAGeA,eAAA,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,SAAAC,OAAWL,EAAMM,QADjC,IACgDN,EAAMO,OAEtDN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBJ,EAAMQ,aCJ/BC,EAAA,SAAAT,GAAK,OAChBC,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACIT,EAAAC,EAAAC,cAACJ,EAAWC,GACZC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVJ,EAAMW,aCNRC,EAAA,SAAAZ,GAAK,OAChBC,EAAAC,EAAAC,cAACM,EAAD,CAAMH,KAAK,OACPC,MAAM,YACNC,SAAS,4CACTP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,gBACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,wLCHOS,EAJHC,IAAMC,OAAO,CACrBC,QAAS,+DCGPC,EAAc,CAChBX,KAAM,MACNC,MAAO,wBACPC,SAAU,0EAORU,EAAU,4BACVC,EAAe,CACjBC,KAAM,CAAEC,GAAI,GAAIC,IAAK,GAAIC,OAAQ,GAAKC,IAAK,GAAGC,IAAK,IAAKC,KAAM,KAC9DC,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,MAAM,GAGWC,cAIjB,SAAAA,EAAY/B,EAAOgC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACxBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMpC,EAAOgC,KAHjBQ,MAE4BN,OAAAO,EAAA,EAAAP,CAAA,GAFhBf,GAEgBc,EAuB5BS,WAvB4BR,OAAAS,EAAA,EAAAT,CAAAU,EAAA1C,EAAA2C,KAuBf,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAA1C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACLP,EAAWQ,SAASC,eAAe,OAAOC,MAC1CT,EAAYO,SAASC,eAAe,QAAQC,MAC5CR,EAAaM,SAASC,eAAe,SAASC,MAClDC,QAAQC,IAAIZ,GACZW,QAAQC,IAAIX,GACZU,QAAQC,IAAIV,GACE,IAAXD,EAPM,CAAAI,EAAAE,KAAA,gBAQLI,QAAQC,IAAI,cARPP,EAAAE,KAAA,GASgBzC,EAAI+C,IAAI,yBAA2Bb,EAAW,IAAME,GATpE,QASDC,EATCE,EAAAS,KAULH,QAAQC,IAAIT,GAVPE,EAAAE,KAAA,oBAWY,IAAZL,EAXA,CAAAG,EAAAE,KAAA,gBAYLI,QAAQC,IAAI,eAZPP,EAAAE,KAAA,GAagBzC,EAAI+C,IAAI,wBAA0Bb,EAAW,IAAMC,GAbnE,QAaDE,EAbCE,EAAAS,KAcLH,QAAQC,IAAIT,GAdPE,EAAAE,KAAA,iBAgBLI,QAAQC,IAAI,iBAhBP,QAkBT1B,EAAK6B,aAlBI,yBAAAV,EAAAW,SAAAjB,MApBTb,EAAK6B,WAAa7B,EAAK6B,WAAWE,KAAhB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAClBA,EAAKiC,YAAcjC,EAAKiC,YAAYF,KAAjB9B,OAAA+B,EAAA,EAAA/B,QAAA+B,EAAA,EAAA/B,CAAAD,KAJKA,oFAQP,IAAAkC,EAAA/B,KACjBtB,IAAMI,GAASkD,KAAK,SAAAC,GAChBF,EAAKG,SAAS,CAAE3C,KAAM0C,EAAKE,+CAK/BnC,KAAKkC,SAAS,CAAExC,MAAM,yCAItBM,KAAKkC,SAAS,CAAExC,MAAM,oCA2BtBM,KAAKkC,SAAS,CAAElD,KAAMD,EAAaC,sCAGhC,IAAAoD,EAAApC,KACGhB,EAAOgB,KAAKI,MAAMpB,KAClBqD,EAASrD,EAAKC,GAAK,MAAQ,OAC3BqD,EAAMtD,EAAKC,GAAL,GAAAhB,OAAaa,EAAb,KAAAb,OAAwBe,EAAKC,IAAOH,EAChDJ,IAAM2D,GAASC,EAAKtD,GACfgD,KAAK,SAAAC,GACF,IAAM1C,EAAO6C,EAAKG,eAAeN,EAAKE,MACtCC,EAAKF,SAAS,CAAElD,KAAMD,EAAaC,KAAMO,wCAIhDP,GACDgB,KAAKkC,SAAU,CAAElD,wCAGdA,GAAK,IAAAwD,EAAAxC,KACRtB,IAAM+D,OAAN,GAAAxE,OAAgBa,EAAhB,KAAAb,OAA2Be,EAAKC,KAAM+C,KAAK,SAAAC,GACvC,IAAM1C,EAAOiD,EAAKD,eAAevD,GAAM,GAEvCwD,EAAKN,SAAS,CAAE3C,kDAITP,GAAe,IAAT0D,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpBpD,EAAOS,KAAKI,MAAMb,KAAKuD,OAAO,SAAAC,GAAC,OAAIA,EAAE9D,KAAOD,EAAKC,KAEvD,OADGyD,GAAKnD,EAAKyD,QAAQhE,GACdO,sCAGC0D,GACR,IAAMjE,EAAIc,OAAAO,EAAA,EAAAP,CAAA,GAAQE,KAAKI,MAAMpB,MAC7BA,EAAKiE,EAAMC,OAAOC,MAAQF,EAAMC,OAAO7B,MACvCrB,KAAKkC,SAAS,CAAElD,+CAIhB,OACInB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKiC,KAAKoD,oDAMV,IAAAC,EAAArD,KACR,OAAOA,KAAKI,MAAMb,KAAK+D,IAAK,SAAAtE,GACxB,OACInB,EAAAC,EAAAC,cAAA,MAAIwF,IAAKvE,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKE,KACVrB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKI,KACVvB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKK,KACVxB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKM,MACVzB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,kBAAMH,EAAKI,KAAKzE,KACzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdwF,QAAS,kBAAMH,EAAKK,OAAO1E,KAC3BnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA2F,EAAA3D,KACR,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACViB,GAAG,MACH4E,YAAY,6BAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKI,IACvB0E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,uBAI5BhG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACViB,GAAG,OACH6E,SAAU,SAACrE,GAAD,OAAakE,EAAKzB,SAASzC,IACrCoE,YAAY,4BAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACViB,GAAG,QACH4E,YAAY,8BAI5BhG,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,IACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAU,kBAAMG,EAAKrD,eADzB,2BAIAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAKM,MAAMF,KAD7B,YAIAlG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBwF,QAASxD,KAAK0B,YAAzD,8DAUhB,OACI7D,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAOxE,KAAMM,KAAKI,MAAMV,KAAMyE,OAAQnE,KAAK8B,aACvCjE,EAAAC,EAAAC,cAACmG,EAAA,EAAME,OAAP,CAAcC,aAAW,GACrBxG,EAAAC,EAAAC,cAACmG,EAAA,EAAMI,MAAP,yCAEJzG,EAAAC,EAAAC,cAACmG,EAAA,EAAMK,KAAP,6CACA1G,EAAAC,EAAAC,cAACmG,EAAA,EAAMM,OAAP,KACI3G,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBwF,QAASxD,KAAK8B,aAAzD,QAGAjE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBwF,QAASxD,KAAK8B,aAAvD,yCASZ,OACIjE,EAAAC,EAAAC,cAACM,EAASQ,EACLmB,KAAKyE,aACLzE,KAAK0E,cACL1E,KAAK2E,sBAnOgBC,aCpBhC/F,EAAc,CAChBX,KAAM,OACNC,MAAO,wBACPC,SAAU,qDAYRW,EAAe,CACjBC,KAAM,CAAEC,GAAI,GAAIC,IAAK,GAAIC,OAAQ,GAAKC,IAAK,GAAGC,IAAK,IAAKC,KAAM,KAC9DC,KAAM,GACNsF,UAAW,IAGMC,6MAEjB1E,qBAAYrB,KAQZgG,iCAAc,SAAArE,IAAA,IAAAsE,EAAAC,EAAA,OAAAzE,EAAA1C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEN8D,EAAQ7D,SAASC,eAAe,SAChC6D,EAAaD,EAAME,QAAQF,EAAMG,eAAe9D,MACpDC,QAAQC,IAAI0D,GAJF,wBAAAjE,EAAAW,SAAAjB,QAmBd0E,2BAAQ,SAAAC,IAAA,IAAApD,EAAA,OAAAzB,EAAA1C,EAAAiD,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACazC,EAAI+C,MADjB,OACAS,EADAqD,EAAA7D,KAGJH,QAAQC,IAAIU,EAAKE,MAHb,wBAAAmD,EAAA3D,SAAA0D,0FAzBa,IAAAtD,EAAA/B,KACjBtB,IAZQ,6BAYOsD,KAAK,SAAAC,GAChBF,EAAKG,SAAS,CAAE3C,KAAM0C,EAAKE,yCAsC/BnC,KAAKkC,SAAS,CAAElD,KAAMD,EAAaC,sCAGhC,IAAAoD,EAAApC,KACGhB,EAAOgB,KAAKI,MAAMpB,KAClBqD,EAASrD,EAAKC,GAAK,MAAQ,OAC3BqD,EAAMtD,EAAKC,GAAL,GAAAhB,OAzDJ,4BAyDI,KAAAA,OAAwBe,EAAKC,IAzDjC,4BA0DRP,IAAM2D,GAASC,EAAKtD,GACfgD,KAAK,SAAAC,GACF,IAAM1C,EAAO6C,EAAKG,eAAeN,EAAKE,MACtCC,EAAKF,SAAS,CAAElD,KAAMD,EAAaC,KAAMO,wCAIhDP,GACDgB,KAAKkC,SAAU,CAAElD,wCAGdA,GAAK,IAAAwD,EAAAxC,KACRtB,IAAM+D,OAAN,GAAAxE,OAtEQ,4BAsER,KAAAA,OAA2Be,EAAKC,KAAM+C,KAAK,SAAAC,GACvC,IAAM1C,EAAOiD,EAAKD,eAAevD,GAAM,GAEvCwD,EAAKN,SAAS,CAAE3C,kDAITP,GAAe,IAAT0D,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpBpD,EAAOS,KAAKI,MAAMb,KAAKuD,OAAO,SAAAC,GAAC,OAAIA,EAAE9D,KAAOD,EAAKC,KAGvD,OAFGyD,GAAKnD,EAAKyD,QAAQhE,GAEdO,sCAGC0D,GACR,IAAMjE,EAAIc,OAAAO,EAAA,EAAAP,CAAA,GAAQE,KAAKI,MAAMpB,MAC7BA,EAAKiE,EAAMC,OAAOC,MAAQF,EAAMC,OAAO7B,MACvCrB,KAAKkC,SAAS,CAAElD,+CAIhB,OACInB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKiC,KAAKoD,oDAMd,IAAAC,EAAArD,KACR,OAAOA,KAAKI,MAAMb,KAAK+D,IAAK,SAAAtE,GACxB,OACInB,EAAAC,EAAAC,cAAA,MAAIwF,IAAKvE,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKE,KACVrB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKI,KACVvB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKK,KACVxB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKM,MACVzB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,kBAAMH,EAAKI,KAAKzE,KACzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdwF,QAAS,kBAAMH,EAAKK,OAAO1E,KAC3BnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA2F,EAAA3D,KACR,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACViB,GAAG,MACH4E,YAAY,6BAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKI,IACvB0E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,uBAI5BhG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQ6F,KAAK,OACT5F,UAAU,eACViB,GAAG,SACCpB,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,GAAGkE,cAAY,GAA7B,+BACA1H,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,UAAd,wBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,WAAd,yBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,WAAd,yBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,WAAd,yBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,WAAd,6BAKpBxD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,kBAAMG,EAAKoB,gBADxB,2BAKAlH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAKM,MAAMF,KAD7B,YAIAlG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdwF,QAAS,kBAAMG,EAAKyB,UADxB,6CAWZ,OACIvH,EAAAC,EAAAC,cAACM,EAASQ,EACLmB,KAAKyE,aACLzE,KAAK0E,sBA/MmBE,aCtBnC/F,EAAc,CAChBX,KAAM,OACNC,MAAO,0BACPC,SAAU,4DAWRU,EAAU,4BACVC,EAAe,CACjBC,KAAM,CAAEC,GAAI,GAAIC,IAAK,GAAIC,OAAQ,GAAKC,IAAK,GAAGC,IAAK,IAAKC,KAAM,KAC9DC,KAAM,GACNiG,YAAa,GACbC,UAAW,IAGMC,6MAEjBtF,qBAAYrB,uFAES,IAAAgD,EAAA/B,KACjBtB,IAAMI,GAASkD,KAAK,SAAAC,GAChBF,EAAKG,SAAS,CAAE3C,KAAM0C,EAAKE,4CAIxBnD,EAAM2G,EAASC,GACtBlH,IAAM8C,IAAN,iEAAAvD,OAA2Ee,EAAKE,IAAhF,KAAAjB,OAAuF0H,EAAvF,KAAA1H,OAAkG2H,IAC7F5D,KAAK,SAAS6D,GACXvE,QAAQC,IAAIsE,EAAS1D,MACrBb,QAAQC,IAAIsE,EAASC,0CAa7B9F,KAAKkC,SAAS,CAAElD,KAAMD,EAAaC,sCAGhC,IAAAoD,EAAApC,KACGhB,EAAOgB,KAAKI,MAAMpB,KAClBqD,EAASrD,EAAKC,GAAK,MAAQ,OAC3BqD,EAAMtD,EAAKC,GAAL,GAAAhB,OAAaa,EAAb,KAAAb,OAAwBe,EAAKC,IAAOH,EAChDJ,IAAM2D,GAASC,EAAKtD,GACfgD,KAAK,SAAAC,GACF,IAAM1C,EAAO6C,EAAKG,eAAeN,EAAKE,MACtCC,EAAKF,SAAS,CAAElD,KAAMD,EAAaC,KAAMO,wCAIhDP,GACDgB,KAAKkC,SAAU,CAAElD,wCAGdA,GAAK,IAAAwD,EAAAxC,KACRtB,IAAM+D,OAAN,GAAAxE,OAAgBa,EAAhB,KAAAb,OAA2Be,EAAKC,KAAM+C,KAAK,SAAAC,GACvC,IAAM1C,EAAOiD,EAAKD,eAAevD,GAAM,GAEvCwD,EAAKN,SAAS,CAAE3C,kDAITP,GAAe,IAAT0D,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpBpD,EAAOS,KAAKI,MAAMb,KAAKuD,OAAO,SAAAC,GAAC,OAAIA,EAAE9D,KAAOD,EAAKC,KAGvD,OAFGyD,GAAKnD,EAAKyD,QAAQhE,GAEdO,sCAGC0D,GACR,IAAMjE,EAAIc,OAAAO,EAAA,EAAAP,CAAA,GAAQE,KAAKI,MAAMpB,MAC7BA,EAAKiE,EAAMC,OAAOC,MAAQF,EAAMC,OAAO7B,MACvCrB,KAAKkC,SAAS,CAAElD,+CAIhB,OACInB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKiC,KAAKoD,oDA2Ed,IAAAC,EAAArD,KACR,OAAOA,KAAKI,MAAMb,KAAK+D,IAAK,SAAAtE,GACxB,OACInB,EAAAC,EAAAC,cAAA,MAAIwF,IAAKvE,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKE,KACVrB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKI,KACVvB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKK,KACVxB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKM,MACVzB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,kBAAMH,EAAKI,KAAKzE,KACzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdwF,QAAS,kBAAMH,EAAKK,OAAO1E,KAC3BnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA2F,EAAA3D,KACR,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKE,IACvB4E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,6BAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKI,IACvB0E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,uBAI5BhG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,cACL9B,MAAOrB,KAAKI,MAAMoF,YAClB3B,YAAY,kCAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,YACLU,YAAY,yBAI5BhG,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAKoC,WAAWhC,EAAGJ,EAAKvD,MAAMpB,KAAM2E,EAAKvD,MAAMoF,YAAa7B,EAAKvD,MAAMqF,aADzF,2BAKA5H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAKM,MAAMF,KAD7B,gDAWZ,OACIlG,EAAAC,EAAAC,cAACM,EAASQ,EACLmB,KAAKyE,aACLzE,KAAK0E,sBA7PYE,aCpB5B/F,EAAc,CAChBX,KAAM,OACNC,MAAO,wBACPC,SAAU,+BAYRW,EAAe,CACjBC,KAAM,CAAEC,GAAI,GAAIC,IAAK,GAAIC,OAAQ,GAAKC,IAAK,GAAGC,IAAK,IAAKC,KAAM,KAC9DC,KAAM,GACNsF,UAAW,IAGMmB,6MAEjB5F,qBAAYrB,KAiBZqG,2BAAQ,SAAA1E,IAAA,IAAAuB,EAAA,OAAAzB,EAAA1C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACazC,EAAI+C,MAAMQ,KAAK,SAAS6D,GACrC7F,KAAKkC,SAAS,CAAC3C,KAAMsG,EAAS1D,SAF9B,OACAF,EADAjB,EAAAS,KAIJH,QAAQC,IAAIU,EAAKE,MAJb,wBAAAnB,EAAAW,SAAAjB,0FAfa,IAAAqB,EAAA/B,KACjBtB,IAZQ,6BAYOsD,KAAK,SAAAC,GAChBF,EAAKG,SAAS,CAAE3C,KAAM0C,EAAKE,0CAI1BnD,EAAKiH,GACV,IAAIC,EAAeD,EAASf,QAAQe,EAASd,eAAe9D,MAC5D5C,EAAI+C,IAAJ,kEAAAvD,OAA0Ee,EAAKE,IAA/E,KAAAjB,OAAsFiI,IACjFlE,KAAK,SAAS6D,GACXvE,QAAQC,IAAIsE,EAAS1D,MACrBb,QAAQC,IAAIsE,EAASC,0CAoB7B9F,KAAKkC,SAAS,CAAElD,KAAMD,EAAaC,sCAGhC,IAAAoD,EAAApC,KACGhB,EAAOgB,KAAKI,MAAMpB,KAClBqD,EAASrD,EAAKC,GAAK,MAAQ,OAC3BqD,EAAMtD,EAAKC,GAAL,GAAAhB,OAhDJ,4BAgDI,KAAAA,OAAwBe,EAAKC,IAhDjC,4BAiDRP,IAAM2D,GAASC,EAAKtD,GACfgD,KAAK,SAAAC,GACF,IAAM1C,EAAO6C,EAAKG,eAAeN,EAAKE,MACtCC,EAAKF,SAAS,CAAElD,KAAMD,EAAaC,KAAMO,wCAIhDP,GACDgB,KAAKkC,SAAU,CAAElD,wCAGdA,GAAK,IAAAwD,EAAAxC,KACRtB,IAAM+D,OAAN,GAAAxE,OA7DQ,4BA6DR,KAAAA,OAA2Be,EAAKC,KAAM+C,KAAK,SAAAC,GACvC,IAAM1C,EAAOiD,EAAKD,eAAevD,GAAM,GAEvCwD,EAAKN,SAAS,CAAE3C,kDAITP,GAAe,IAAT0D,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpBpD,EAAOS,KAAKI,MAAMb,KAAKuD,OAAO,SAAAC,GAAC,OAAIA,EAAE9D,KAAOD,EAAKC,KAGvD,OAFGyD,GAAKnD,EAAKyD,QAAQhE,GAEdO,sCAGC0D,GACR,IAAMjE,EAAIc,OAAAO,EAAA,EAAAP,CAAA,GAAQE,KAAKI,MAAMpB,MAC7BA,EAAKiE,EAAMC,OAAOC,MAAQF,EAAMC,OAAO7B,MACvCrB,KAAKkC,SAAS,CAAElD,+CAIhB,OACInB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKiC,KAAKoD,oDAMd,IAAAC,EAAArD,KACR,OAAOA,KAAKI,MAAMb,KAAK+D,IAAK,SAAAtE,GACxB,OACInB,EAAAC,EAAAC,cAAA,MAAIwF,IAAKvE,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKE,KACVrB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKI,KACVvB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKK,KACVxB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKM,MACVzB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,KACLvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,kBAAMH,EAAKI,KAAKzE,KACzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAGrBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdwF,QAAS,kBAAMH,EAAKK,OAAO1E,KAC3BnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA2F,EAAA3D,KACR,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKE,IACvB4E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,6BAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKI,IACvB0E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,uBAI5BhG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UAAQ6F,KAAK,OACT5F,UAAU,eACViB,GAAG,gBACCpB,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,GAAGkE,cAAY,GAA7B,qCACA1H,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,cAAd,gBACAxD,EAAAC,EAAAC,cAAA,UAAQsD,MAAM,gBAAd,sBAKpBxD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qCAAjB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,4BACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAK0C,SAAStC,EAAEJ,EAAKvD,MAAMpB,KAAKmC,SAASC,eAAe,mBAD1E,2BAKAvD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAKM,MAAMF,KAD7B,gDAWZ,OACIlG,EAAAC,EAAAC,cAACM,EAASQ,EACLmB,KAAKyE,aACLzE,KAAK0E,sBA3LgBE,aCnBhC/F,EAAc,CAChBX,KAAM,OACNC,MAAO,wBACPC,SAAU,kBAYRW,EAAe,CACjBC,KAAM,CAAEC,GAAI,GAAIC,IAAK,GAAIC,OAAQ,GAAKC,IAAK,GAAGC,IAAK,IAAKC,KAAM,KAC9DC,KAAM,GACNsF,UAAW,IAGMmB,6MAEjB5F,qBAAYrB,KAiCZqG,2BAAQ,SAAA1E,IAAA,IAAAuB,EAAA,OAAAzB,EAAA1C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACazC,EAAI+C,MAAMQ,KAAK,SAAS6D,GACrC7F,KAAKkC,SAAS,CAAC3C,KAAMsG,EAAS1D,SAF9B,OACAF,EADAjB,EAAAS,KAIJH,QAAQC,IAAIU,EAAKE,MAJb,wBAAAnB,EAAAW,SAAAjB,0FAfa,IAAAqB,EAAA/B,KACjBtB,IA5BQ,6BA4BOsD,KAAK,SAAAC,GAChBF,EAAKG,SAAS,CAAE3C,KAAM0C,EAAKE,0CAI1BnD,EAAKiH,GACV,IAAIC,EAAeD,EAASf,QAAQe,EAASd,eAAe9D,MAC5D5C,EAAI+C,IAAJ,kEAAAvD,OAA0Ee,EAAKE,IAA/E,KAAAjB,OAAsFiI,IACjFlE,KAAK,SAAS6D,GACXvE,QAAQC,IAAIsE,EAAS1D,MACrBb,QAAQC,IAAIsE,EAASC,0CAY7B9F,KAAKkC,SAAS,CAAElD,KAAMD,EAAaC,sCAGhC,IAAAoD,EAAApC,KACGhB,EAAOgB,KAAKI,MAAMpB,KAClBqD,EAASrD,EAAKC,GAAK,MAAQ,OAC3BqD,EAAMtD,EAAKC,GAAL,GAAAhB,OAxDJ,4BAwDI,KAAAA,OAAwBe,EAAKC,IAxDjC,4BAyDRP,IAAM2D,GAASC,EAAKtD,GACfgD,KAAK,SAAAC,GACF,IAAM1C,EAAO6C,EAAKG,eAAeN,EAAKE,MACtCC,EAAKF,SAAS,CAAElD,KAAMD,EAAaC,KAAMO,wCAIhDP,GACDgB,KAAKkC,SAAU,CAAElD,wCAGdA,GAAK,IAAAwD,EAAAxC,KACRtB,IAAM+D,OAAN,GAAAxE,OArEQ,4BAqER,KAAAA,OAA2Be,EAAKC,KAAM+C,KAAK,SAAAC,GACvC,IAAM1C,EAAOiD,EAAKD,eAAevD,GAAM,GAEvCwD,EAAKN,SAAS,CAAE3C,kDAITP,GAAe,IAAT0D,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACpBpD,EAAOS,KAAKI,MAAMb,KAAKuD,OAAO,SAAAC,GAAC,OAAIA,EAAE9D,KAAOD,EAAKC,KAGvD,OAFGyD,GAAKnD,EAAKyD,QAAQhE,GAEdO,sCAGC0D,GACR,IAAMjE,EAAIc,OAAAO,EAAA,EAAAP,CAAA,GAAQE,KAAKI,MAAMpB,MAC7BA,EAAKiE,EAAMC,OAAOC,MAAQF,EAAMC,OAAO7B,MACvCrB,KAAKkC,SAAS,CAAElD,+CAIhB,OACInB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAGRF,EAAAC,EAAAC,cAAA,aACKiC,KAAKoD,oDAMd,IAAAC,EAAArD,KACR,OAAOA,KAAKI,MAAMb,KAAK+D,IAAK,SAAAtE,GACxB,OACInB,EAAAC,EAAAC,cAAA,MAAIwF,IAAKvE,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKC,IACVpB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKE,KACVrB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKI,KACVvB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKK,KACVxB,EAAAC,EAAAC,cAAA,UAAKiB,EAAKM,MACVzB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,kBAAMH,EAAKI,KAAKzE,KACzBnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAEjBH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,UACTvI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAGdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAGjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdwF,QAAS,kBAAMH,EAAKK,OAAO1E,KAC3BnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0DAQzB,IAAA2F,EAAA3D,KACR,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKE,IACvB4E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,6BAGxBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAO6F,KAAK,OACR5F,UAAU,eACVmF,KAAK,MACL9B,MAAOrB,KAAKI,MAAMpB,KAAKI,IACvB0E,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,YAAYD,IAChCF,YAAY,uBAI5BhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAK2C,KAAKvC,KAD5B,2BAIAlG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBACdwF,QAAS,SAAAO,GAAC,OAAIJ,EAAKM,MAAMF,KAD7B,gDAWZ,OACIlG,EAAAC,EAAAC,cAACM,EAASQ,EACNmB,KAAKyE,aACLzE,KAAK0E,sBApLiBE,aCpBvB2B,EAAA,SAAA3I,GAAK,OAChBC,EAAAC,EAAAC,cAACyI,EAAA,EAAD,KACI3I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnI,IACjCX,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWhH,IAChC9B,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW7B,IAChCjH,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWjB,IAC/B7H,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWX,IAChCnI,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnC/I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAUK,KAAK,IAAIT,GAAG,kCCZfU,EAAA,SAAAlJ,GAAK,OAChBC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QACTH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,IAAIpI,UAAU,QACvBH,EAAAC,EAAAC,cAAA,OAAKgJ,IAAKC,IAAMC,IAAI,YCJjBC,UAAA,SAAAtJ,GAAK,OAChBC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,KACLvI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,cAGAH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,aACLvI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,kBAGAH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,UACLvI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBADjB,yBAGAH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,UACLvI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,kBAGAH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,SACLvI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,4BAGAH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,GAAG,UACLvI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBADjB,gCCnBGmJ,UAAA,SAAAvJ,GAAK,OAChBC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,gCACqBF,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,cCMlBoJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7J,EAAAC,EAAAC,cCMD,SAAAH,GAAK,OAChBC,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACItI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC+I,EAAD,MACAjJ,EAAAC,EAAAC,cAACmJ,EAAD,MACArJ,EAAAC,EAAAC,cAACwI,EAAD,MACA1I,EAAAC,EAAAC,cAACoJ,EAAD,SDZI,MAAShG,SAASC,eAAe,SD2H3C,kBAAmBuG,WACrBA,UAAUC,cAAcC,MAAM7F,KAAK,SAAA8F,GACjCA,EAAaC,mCGnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.bead577f.chunk.js","sourcesContent":["import './Header.css'\r\nimport React from 'react';\r\n\r\nexport default props =>\r\n    <header className=\"header d-none d-sm-flex flex-column\">\r\n        <h1 className=\"mt-3\">\r\n            <i className={`fa fa-${props.icon}`} ></i> {props.title}\r\n        </h1>\r\n        <p className=\"lead text-muted\">{props.subtitle}</p>\r\n    </header>","import './Main.css'\r\nimport React from 'react';\r\nimport Header from './Header'\r\n\r\nexport default props =>\r\n    <React.Fragment>\r\n        <Header {...props} />\r\n        <main className=\"content container-fluid\">\r\n            <div className=\"p-3 mt-3\">\r\n                {props.children}\r\n            </div>\r\n        </main>\r\n    </React.Fragment>","import React from 'react';\r\nimport Main from '../templates/Main';\r\n\r\nexport default props =>\r\n    <Main icon=\"home\" \r\n        title=\"Início\" \r\n        subtitle=\"Segundo Projeto do capítulo de React.\">\r\n        <div className=\"display-4\"> Bem Vindo! </div>\r\n        <hr/> \r\n        <p className=\"mb-0\"> Sistema para exemplificar a construção de um cadastro desenvolvido em React!</p>\r\n    </Main>","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://192.168.2.4:8080/TesteWebservice/onuconfig'\r\n});\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport axios from 'axios'\r\nimport api from '../users/api.js'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nconst headerProps = {\r\n    icon: 'key',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Altera SSID e senha. Cadastro de ONUs: Inclui, Lista, Altera e Exclui.'\r\n}\r\n\r\n/*\r\nconst baseUrl = 'http://192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', mac: '', number: '' , olt: '',pon: '4', slot: '4'},\r\n    list: [],\r\n    meumac: '',\r\n    meussid: '',\r\n    show: false\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n    \r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n       \r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ show: false });\r\n    }\r\n    \r\n    handleShow() {\r\n        this.setState({ show: true });\r\n    }\r\n    \r\n\r\n    trocarSSID = async () => {\r\n        var valormac = document.getElementById('mac').value\r\n        var valorssid = document.getElementById('ssid').value\r\n        var valorsenha = document.getElementById('senha').value\r\n        console.log(valormac);\r\n        console.log(valorssid);\r\n        console.log(valorsenha);\r\n        if(valorssid==\"\"){\r\n            console.log(\"ssid vazio\")\r\n            var resposta = await api.get('/roteador/trocarsenha/' + valormac + '/' + valorsenha)\r\n            console.log(resposta)\r\n        }else if(valorsenha==\"\"){\r\n            console.log(\"senha vazia\")\r\n            var resposta = await api.get('/roteador/trocarssid/' + valormac + '/' + valorssid)\r\n            console.log(resposta)\r\n        }else{\r\n            console.log(\"Passou direto\")\r\n        }\r\n        this.handleShow()\r\n        //axios.get(`http://192.168.2.2:8080/TesteWebservice/roteador/trocarsenha/${user.mac}/${senha}`)\r\n    }\r\n    \r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>OLT</th>\r\n                        <th>Pon</th>\r\n                        <th>Slot</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    renderRows(){\r\n        return this.state.list.map( user => {\r\n            return (\r\n                <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.mac}</td>\r\n                    <td>{user.olt}</td>\r\n                    <td>{user.pon}</td>\r\n                    <td>{user.slot}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-warning\"\r\n                            onClick={() => this.load(user)}>\r\n                            <i className=\"fa fa-retweet\"></i>\r\n                        </button>\r\n                        <button className=\"btn btn-danger ml-2\"\r\n                            onClick={() => this.remove(user)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderForm(){\r\n        return (\r\n            <div className=\"form\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>MAC Adress*</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"mac\"\r\n                                placeholder=\"Digite o MAC Adress...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>OLT</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"olt\"\r\n                                value={this.state.user.olt}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o olt...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <th>Alterar SSID e senha</th>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>SSID*</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"ssid\"\r\n                                onChange={(meussid) => this.setState(meussid)}\r\n                                placeholder=\"Digite o novo SSID...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Senha*</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"senha\"\r\n                                placeholder=\"Digite a nova senha...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <label className=\"col-14 d-flex justify-content-end\">* \r\n                <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick= {() => this.trocarSSID()}>\r\n                            Aplicar alteração\r\n                        </button>\r\n                        <button className=\"btn btn-secondary ml-2\"\r\n                            onClick={e => this.clear(e)}>\r\n                            Cancelar\r\n                        </button>\r\n                        <button className=\"btn btn-secondary ml-2\" onClick={this.handleShow}>\r\n                            Launch demo modal\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    renderPopup(){\r\n        return (\r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Alteração de SSID e senha</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Requisição enviada com sucesso</Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-secondary ml-2\" onClick={this.handleClose}>\r\n                        Sair\r\n                    </button>\r\n                    <button className=\"btn btn-primary ml-2\" onClick={this.handleClose}>\r\n                        OK\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n                {this.renderPopup()}\r\n            </Main>\r\n        )\r\n    }  \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api.js'\r\nimport axios from 'axios'\r\n\r\nconst headerProps = {\r\n    icon: 'wifi',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Cadastro de ONUs: Inclui, Lista, Altera e Exclui.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', mac: '', number: '' , olt: '',pon: '4', slot: '4'},\r\n    list: [],\r\n    novoCanal: ''\r\n}\r\n\r\nexport default class AlteraCanal extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    trocarCanal = async () => {\r\n        //var valormac = document.getElementById('mac').value\r\n        let canal = document.getElementById('canal')\r\n        let valorcanal = canal.options[canal.selectedIndex].value;\r\n        console.log(valorcanal)\r\n        //var resposta = await api.get('/roteador/trocarsenha/' + valormac + '/' + valorcanal)\r\n        //console.log(resposta)\r\n        \r\n    }\r\n\r\n    /*trocarCanal(user,canal){\r\n        let novoCanal = canal.options[canal.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoCanal}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }*/\r\n\r\n    teste = async () => {\r\n        let resp = await api.get();\r\n        //this.setState({list: resp.data})\r\n        console.log(resp.data);\r\n    }\r\n\r\n    /*trocassid(){\r\n        axios.get('https://api.github.com/users/' + username)\r\n            .then(function(response){\r\n        console.log(response.data); // ex.: { user: 'Your User'}\r\n        console.log(response.status); // ex.: 200\r\n        }); \r\n    }*/\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>OLT</th>\r\n                        <th>Pon</th>\r\n                        <th>Slot</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.olt}</td>\r\n                <td>{user.pon}</td>\r\n                <td>{user.slot}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={() => this.load(user)}>\r\n                        <i className=\"fa fa-retweet\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>MAC Adress*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"mac\"\r\n                            placeholder=\"Digite o MAC Adress...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"olt\"\r\n                            value={this.state.user.olt}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o olt...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <th>Alterar Canal</th>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Canal*</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"canal\">\r\n                                <option value=\"\" defaultValue > Selecione o novo canal... </option>\r\n                                <option value=\"canal1\"> Canal 1: 2.412 MHz </option>\r\n                                <option value=\"canal2\"> Canal 2: 2.417 MHz </option>\r\n                                <option value=\"canal3\"> Canal 3: 2.422 MHz </option>\r\n                                <option value=\"canal4\"> Canal 4: 2.427 MHz </option>\r\n                                <option value=\"canal5\"> Canal 5: 2.432 MHz </option>\r\n                                <option value=\"canal6\"> Canal 6: 2.437 MHz </option>\r\n                                <option value=\"canal7\"> Canal 7: 2.442 MHz </option>\r\n                                <option value=\"canal8\"> Canal 8: 2.447 MHz </option>\r\n                                <option value=\"canal9\"> Canal 9: 2.452 MHz </option>\r\n                                <option value=\"canal10\"> Canal 10: 2.457 MHz </option>\r\n                                <option value=\"canal11\"> Canal 11: 2.462 MHz </option>\r\n                                <option value=\"canal12\"> Canal 12: 2.467 MHz </option>\r\n                                <option value=\"canal13\"> Canal 13: 2.472 MHz </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={() => this.trocarCanal()}\r\n                        /*onClick={e => this.save(e)}*/>\r\n                        Aplicar alteração\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={() => this.teste()}>\r\n                        Teste\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport axios from 'axios'\r\n\r\nconst headerProps = {\r\n    icon: 'user',\r\n    title: 'Configuração PPoE',\r\n    subtitle: 'Configurar usuário e senha PPoE. Lista e exclui ONUs.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', mac: '', number: '' , olt: '',pon: '4', slot: '4'},\r\n    list: [],\r\n    usuarioPPOE: '',\r\n    senhaPPOE: ''\r\n}\r\n\r\nexport default class PPOE extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    configPPOE(user, usuario, senha){\r\n        axios.get(`http://192.168.2.126:8080/TesteWebservice/roteador/configppoe/${user.mac}/${usuario}/${senha}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    /*trocassid(){\r\n        axios.get('https://api.github.com/users/' + username)\r\n            .then(function(response){\r\n        console.log(response.data); // ex.: { user: 'Your User'}\r\n        console.log(response.status); // ex.: 200\r\n        }); \r\n    }*/\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>OLT</th>\r\n                        <th>Pon</th>\r\n                        <th>Slot</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n/*\r\n    renderRows(){\r\n        return this.state.list.map( user => {\r\n            return (\r\n                <tr key={user.number}>\r\n                    <td>{user.number}</td>\r\n                    <td>{user.mac}</td>\r\n                    <td>{user.olt}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-warning\"\r\n                            onClick={() => this.load(user)}>\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                        <button className=\"btn btn-danger ml-2\"\r\n                            onClick={() => this.remove(user)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderForm(){\r\n        return (\r\n            <div className='form'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"mac\"\r\n                                value={this.state.user.mac}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o nome...\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>E-mail</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"olt\"\r\n                                value={this.state.user.olt}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o e-mail...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick={e => this.save(e)}>\r\n                            Salvar\r\n                        </button>\r\n                        <button className=\"btn btn-secondary ml-2\"\r\n                            onClick={e => this.clear(e)}>\r\n                            Cancelar\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.olt}</td>\r\n                <td>{user.pon}</td>\r\n                <td>{user.slot}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={() => this.load(user)}>\r\n                        <i className=\"fa fa-retweet\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>MAC Adress*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"mac\"\r\n                            value={this.state.user.mac}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o MAC Adress...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"olt\"\r\n                            value={this.state.user.olt}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o olt...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <th>Configurar usuário e senha PPoE</th>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Usuário*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"usuarioPPOE\"\r\n                            value={this.state.usuarioPPOE}\r\n                            placeholder=\"Digite o usuário PPOE...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Senha*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"senhaPPOE\"\r\n                            placeholder=\"Digite a senha...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.configPPOE(e, this.state.user, this.state.usuarioPPOE, this.state.senhaPPOE)}\r\n                        /*onClick={e => this.save(e)}*/>\r\n                        Aplicar alteração\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst headerProps = {\r\n    icon: 'wifi',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Habilita e desabilita ONUs.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', mac: '', number: '' , olt: '',pon: '4', slot: '4'},\r\n    list: [],\r\n    novoCanal: ''\r\n}\r\n\r\nexport default class OnOffONU extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    onuONOFF(user,situacao){\r\n        let novoSituacao = situacao.options[situacao.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoSituacao}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    teste = async () => {\r\n        let resp = await api.get().then(function(response){\r\n            this.setState({list: response.data});\r\n        });\r\n        console.log(resp.data);\r\n    }\r\n\r\n    /*trocassid(){\r\n        axios.get('https://api.github.com/users/' + username)\r\n            .then(function(response){\r\n        console.log(response.data); // ex.: { user: 'Your User'}\r\n        console.log(response.status); // ex.: 200\r\n        }); \r\n    }*/\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>OLT</th>\r\n                        <th>Pon</th>\r\n                        <th>Slot</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.olt}</td>\r\n                <td>{user.pon}</td>\r\n                <td>{user.slot}</td>\r\n                <td>\r\n                    <Link to=\"/\">\r\n                        <button className=\"btn btn-warning\"\r\n                            onClick={() => this.load(user)}>\r\n                            <i className=\"fa fa-retweet\"></i>\r\n                        </button>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>MAC Adress*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"mac\"\r\n                            value={this.state.user.mac}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o MAC Adress...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"olt\"\r\n                            value={this.state.user.olt}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite a olt...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <th>Alterar Habilitado/Desabilitado</th>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>Situação*</label>\r\n                        <select type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"novaSituacao\">\r\n                                <option value=\"\" defaultValue > Selecione a nova opção... </option>\r\n                                <option value=\"habilitado\"> Habilitado </option>\r\n                                <option value=\"desabilitado\"> Desabilitado </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <label className=\"col-14 d-flex justify-content-end\">* <span className=\"text-danger\"> Campos obrigatórios</span></label>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.onuONOFF(e,this.state.user,document.getElementById(\"novaSituacao\"))}\r\n                        /*onClick={e => this.save(e)}*/>\r\n                        Aplicar alteração\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Main from '../templates/Main'\r\nimport api from '../users/api'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport AlteraCanal from './AlteraCanal';\r\nimport UserCrud from './UserCrud';\r\n\r\nconst headerProps = {\r\n    icon: 'list',\r\n    title: 'Gerenciamento de ONUs',\r\n    subtitle: 'Lista de ONUs.'\r\n}\r\n\r\n/*\r\nconst baseUrl = '192.168.8.87:8080/TesteWebservice/anm/192.168.8.87/onu'\r\nconst initialState = {\r\n    user: {mac: '', number: '', olt: ''},\r\n    list: []\r\n}\r\n*/\r\n\r\nconst baseUrl = 'http://localhost:3001/onu'\r\nconst initialState = {\r\n    user: { id: '', mac: '', number: '' , olt: '',pon: '4', slot: '4'},\r\n    list: [],\r\n    novoCanal: ''\r\n}\r\n\r\nexport default class OnOffONU extends Component {\r\n    \r\n    state = {...initialState}\r\n\r\n    /*constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           macadress: this.state.user.mac,\r\n           olt: this.state.user.olt\r\n        }\r\n    }*/\r\n\r\n    /*constructor(usercrud = new UserCrud()){\r\n        this.usercrud = usercrud;\r\n    }\r\n\r\n    tryingMethod(user){\r\n        this.usercrud.load(user);\r\n    }*/\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    onuONOFF(user,situacao){\r\n        let novoSituacao = situacao.options[situacao.selectedIndex].value;\r\n        api.get(`http://192.168.2.126:8080/TesteWebservice/roteador/trocarcanal/${user.mac}/${novoSituacao}`)\r\n            .then(function(response){\r\n                console.log(response.data); // ex.: { user: 'Your User'}\r\n                console.log(response.status); // ex.: 200\r\n            });\r\n    }\r\n\r\n    teste = async () => {\r\n        let resp = await api.get().then(function(response){\r\n            this.setState({list: response.data});\r\n        });\r\n        console.log(resp.data);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post' //se number(id) for verdadeiro(alteração) então put, caso contrario insira com post.\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method]( url, user )\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    load(user) {\r\n        this.setState ({ user })\r\n    }\r\n\r\n    remove(user){\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            //const list = this.state.list.filter(u => u !== user)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    getUpdatedList(user, add=true){\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        //list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event){\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderTable(){\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>MAC Adress</th>\r\n                        <th>OLT</th>\r\n                        <th>Pon</th>\r\n                        <th>Slot</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\nrenderRows(){\r\n    return this.state.list.map( user => {\r\n        return (\r\n            <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.mac}</td>\r\n                <td>{user.olt}</td>\r\n                <td>{user.pon}</td>\r\n                <td>{user.slot}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={() => this.load(user)}>\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </button>\r\n                    <Link to=\"/canal\">\r\n                    <button className=\"btn btn-style-background-green ml-2\"\r\n                        //onClick={() => this.tryingMethod(user)}\r\n                        >\r\n                        <i className=\"fa fa-key\"></i>\r\n                    </button>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger ml-2\"\r\n                        onClick={() => this.remove(user)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n}\r\n\r\nrenderForm(){\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>MAC Adress*</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"mac\"\r\n                            value={this.state.user.mac}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite o MAC Adress...\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                        <label>OLT</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"olt\"\r\n                            value={this.state.user.olt}\r\n                            onChange={e => this.updateField(e)}\r\n                            placeholder=\"Digite a olt...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\"\r\n                        onClick={e => this.save(e)}>\r\n                        Aplicar alteração\r\n                    </button>\r\n                    <button className=\"btn btn-secondary ml-2\"\r\n                        onClick={e => this.clear(e)}>\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    render() {\r\n        return(\r\n            <Main {...headerProps}>\r\n               {this.renderForm()}\r\n               {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router'\r\nimport Home from '../components/home/Home'\r\nimport UserCrud from '../components/users/UserCrud'\r\nimport AlteraCanal from '../components/users/AlteraCanal'\r\nimport PPOE from '../components/users/PPOE'\r\nimport OnOffONU from '../components/users/OnOffONU'\r\nimport ListaONU from '../components/users/ListaONUs'\r\n\r\nexport default props =>\r\n    <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/users' component={UserCrud} />\r\n        <Route path='/canal' component={AlteraCanal} />\r\n        <Route path='/ppoe' component={PPOE} />\r\n        <Route path='/onoff' component={OnOffONU} />\r\n        <Route path='/listaonu' component={ListaONU} />\r\n        <Redirect from='*' to='/' />\r\n    </Switch>","import './Logo.css'\r\nimport React from 'react';\r\nimport logo from '../../assets/imgs/logoviareal.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props => \r\n    <aside className=\"logo\">\r\n            <Link to=\"/\" className=\"logo\">\r\n            <img src={logo} alt=\"logo\" />\r\n        </Link>\r\n    </aside>","import './Nav.css'\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default props =>\r\n    <aside className=\"menu-area\">\r\n        <nav className=\"menu\">\r\n            <Link to=\"/\">\r\n                <i className=\"fa fa-home mr-2\"></i> Início\r\n            </Link>\r\n            <Link to=\"/listaonu\">\r\n                <i className=\"fa fa-list mr-2\"></i> Lista de ONUs\r\n            </Link>\r\n            <Link to=\"/users\">\r\n                <i className=\"fa fa-key mr-2\"></i> Alterar SSID e senha\r\n            </Link>\r\n            <Link to=\"/canal\">\r\n                <i className=\"fa fa-wifi mr-2\"></i> Alterar Canal\r\n            </Link>\r\n            <Link to=\"/ppoe\">\r\n                <i className=\"fa fa-user mr-2\"></i> Configuração PPoE\r\n            </Link>\r\n            <Link to=\"/onoff\">\r\n                <i className=\"fa fa-power-off mr-2\"></i> Habilita/Desabilita ONU\r\n            </Link>\r\n        </nav>\r\n    </aside>","import './Footer.css'\r\nimport React from 'react';\r\n\r\nexport default props =>\r\n    <footer className=\"footer\">\r\n        <span>\r\n            Desenvolvido com <strong> <span className=\"text-danger\">React</span></strong>\r\n        </span>\r\n    </footer>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport './App.css'\r\nimport React from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Routes'\r\nimport Logo from '../components/templates/Logo'\r\nimport Nav from '../components/templates/Nav'\r\nimport Footer from '../components/templates/Footer'\r\n\r\n\r\nexport default props =>\r\n    <HashRouter>\r\n        <div className=\"app\">\r\n            <Logo />\r\n            <Nav />\r\n            <Routes />\r\n            <Footer />        \r\n        </div>\r\n    </HashRouter>\r\n    ","module.exports = __webpack_public_path__ + \"static/media/logoviareal.a5bb7cca.png\";"],"sourceRoot":""}